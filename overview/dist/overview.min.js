!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).OverviewMap=t()}(this,(function(){"use strict";const e=(e,t,i)=>Math.min(i,Math.max(e,t));return function(t){return class{constructor(e){this._extent={type:"FeatureCollection",features:[]},this._moving=!1,this._container=document.createElement("div"),this._container.className="maplibregl-ctrl-overview-map maplibregl-ctrl",this._container.addEventListener("contextmenu",(e=>e.preventDefault()));this.options={zoomLevelOffset:-5,watchEvents:["move","rotate","pitch"],overlayPaint:{"fill-color":"#d29700","fill-opacity":.75},selectionPaint:{"fill-color":"#d29700","fill-opacity":.25,"fill-outline-color":"#000000"},width:150,height:150,style:"",...e},this._mapLibrary=t,this._container.setAttribute("style",`width: ${this.options.width}px; height: ${this.options.height}px;`),this._overviewMap=new t.Map({container:this._container,style:this.options.style,interactive:!0,pitchWithRotate:!1,attributionControl:!1,boxZoom:!1,dragRotate:!1,touchZoomRotate:!1,touchPitch:!1,minZoom:-2}),this._overviewMap.on("load",(()=>{this._overviewMap.resize(),this._overviewMap.addSource("bboxSource",{type:"geojson",data:this._extent}),this._overviewMap.addSource("selectionSource",{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this._overviewMap.addLayer({id:"bboxLayer",type:"fill",source:"bboxSource",layout:{},paint:this.options.overlayPaint}),this._overviewMap.addLayer({id:"selectionFillLayer",type:"fill",source:"selectionSource",layout:{},paint:this.options.selectionPaint}),this._overviewMap.addLayer({id:"selectionLineLayer",type:"line",source:"selectionSource",layout:{},paint:{"line-color":this.options.selectionPaint["fill-outline-color"]||"#000000","line-width":2}})}))}onAdd(e){if(this._mainMap=e,""===this.options.style){const e=this._mainMap.style.serialize();this._overviewMap.setStyle(e)}return this._overviewMap.setCenter(this._mainMap.getCenter()),this.options.watchEvents.forEach((t=>e.on(t,(()=>this._updateOverview(e))))),e.once("style.load",(()=>this._updateOverview(e))),this._updateOverview(e),this._overviewMap.on("movestart",(()=>this._updateMain(e))),this._container}onRemove(){this._mainMap&&(this.options.watchEvents.forEach((e=>this._mainMap&&this._mainMap.off(e,(()=>this._updateOverview(this._mainMap))))),this._overviewMap.off("movestart",(()=>this._updateMain(this._mainMap)))),""===this.options.style&&this._overviewMap.setStyle(""),this._mainMap=void 0}_updateOverview(t){var i;if(this._moving||!this._overviewMap)return;const o=t.getPixelRatio(),a={type:"FeatureCollection",features:[]};if(t){const s=t.unproject([t.getCanvas().width/o/2,t.getCanvas().height/o/2]),n=t.getBounds();let r=[[-179.99,n.getNorth()],[179.99,n.getNorth()],[179.99,n.getSouth()],[-179.99,n.getSouth()],[-179.99,n.getNorth()]];n.getEast()-n.getWest()<360+Math.abs(90-Math.abs(90-Math.abs(t.getBearing())))*(t.getPitch()/60)&&(r=[t.unproject([0,0]).toArray(),t.unproject([t.getCanvas().width/o,0]).toArray(),t.unproject([t.getCanvas().width/o,t.getCanvas().height/o]).toArray(),t.unproject([0,t.getCanvas().height/o]).toArray(),t.unproject([0,0]).toArray()]),a.features.push({type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[r]}});const h=e(this._overviewMap.getMinZoom(),t.getZoom()+this.options.zoomLevelOffset,this._overviewMap.getMaxZoom());this._moving=!0,this._overviewMap.setCenter(s),this._overviewMap.setZoom(h),this._moving=!1,null===(i=this._overviewMap.getSource("bboxSource"))||void 0===i||i.setData(a),this._extent=a}}_updateMain(t){var i;if(this._moving||!this._mainMap)return;const o=JSON.parse(JSON.stringify(this._extent)),a=o.features[0].geometry.coordinates[0].map((e=>this._overviewMap.project(e)));null===(i=this._overviewMap.getSource("selectionSource"))||void 0===i||i.setData(o);const s=Math.max(this._overviewMap.getZoom()-this._mainMap.getZoom(),this.options.zoomLevelOffset),n=()=>{var e;const t=a.map((e=>this._overviewMap.unproject([e.x,e.y]))).map((e=>[e.lng,e.lat])),i={type:"FeatureCollection",features:[]};i.features.push({type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[t]}}),null===(e=this._overviewMap.getSource("selectionSource"))||void 0===e||e.setData(i)},r=()=>{if(this._overviewMap.off("move",n),this._overviewMap.off("moveend",r),this._mainMap){let i=this._overviewMap.getCenter();const o=e(this._mainMap.getMinZoom(),this._overviewMap.getZoom()-s,this._mainMap.getMaxZoom());this._moving=!0,this._mainMap.once("moveend",(e=>e.doneEvents&&e.doneEvents())),this._mainMap.easeTo({center:i,zoom:o},{doneEvents:()=>{var e;null===(e=this._overviewMap.getSource("selectionSource"))||void 0===e||e.setData({type:"FeatureCollection",features:[]}),this._moving=!1,this._updateOverview(t)}})}};this._overviewMap.once("moveend",r),this._overviewMap.on("move",n)}}}}));
//# sourceMappingURL=overview.min.js.map
